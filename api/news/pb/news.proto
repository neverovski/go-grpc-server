syntax = "proto3";
package pb;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service NewsService {
	rpc GetNews(GetNewsRequest) returns (GetNewsResponse) {
		option(google.api.http) = {
			get: "/api/v1/news/{id}"
		};
	}

	rpc GetNewsForUser(GetNewsForUserRequest) returns (GetNewsForUserResponse) {
		option(google.api.http) = {
			get: "/api/v1/news/user/{user_id}"
		};
	}

	rpc PostNews(PostNewsRequest) returns (PostNewsResponse) {
		option (google.api.http) ={
			post: "/api/v1/news"
			body: "*"
		};
	}

	rpc UpdateNews(UpdateNewsRequest) returns (UpdateNewsResponse) {
		option (google.api.http) ={
			put: "/api/v1/news"
			body: "*"
		};
	}

	rpc DeleteNews(DeleteNewsRequest) returns (DeleteNewsResponse) {
		option (google.api.http) ={
			delete: "/api/v1/news/{id}"
		};
	}
}

message News {
	string id = 1;
	string title = 2;
	string description = 3;
	string h1 = 4;
	string text = 5;
	bool published = 6;
	string userId = 7;

	// @inject_tag: sql:"type:timestamptz,default:now()"
	google.protobuf.Timestamp created_at = 8;

	// @inject_tag: sql:"type:timestamptz"
	google.protobuf.Timestamp updated_at = 9;
}

message GetNewsRequest {
	string id = 1;
}

message GetNewsResponse {
	News news = 1;
}

message GetNewsForUserRequest {
	string user_id = 1;
}

message GetNewsForUserResponse {
	repeated News news = 1;
}

message PostNewsRequest {
	string title = 1;
	string description = 2;
	string h1 = 3;
	string text = 4;
	bool published = 5;
}

message PostNewsResponse {
	News news = 1;
}

message UpdateNewsRequest {
	string title = 1;
	string description = 2;
	string h1 = 3;
	string text = 4;
	bool published = 5;
}

message UpdateNewsResponse {
	News news = 1;
}

message DeleteNewsRequest {
	string id = 1;
}

message DeleteNewsResponse {}