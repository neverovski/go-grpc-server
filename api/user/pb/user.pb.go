// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/user/pb/user.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	api/user/pb/user.proto

It has these top-level messages:
	User
	GetUserRequest
	GetUserResponse
	PostUserRequest
	PostUserResponse
	UpdateUserRequest
	UpdateUserResponse
	DeleteUserRequest
	DeleteUserResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type User struct {
	Id        string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Username  string                      `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Email     string                      `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GetUserRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *GetUserResponse) Reset()                    { *m = GetUserResponse{} }
func (m *GetUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserResponse) ProtoMessage()               {}
func (*GetUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type PostUserRequest struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *PostUserRequest) Reset()                    { *m = PostUserRequest{} }
func (m *PostUserRequest) String() string            { return proto.CompactTextString(m) }
func (*PostUserRequest) ProtoMessage()               {}
func (*PostUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PostUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type PostUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *PostUserResponse) Reset()                    { *m = PostUserResponse{} }
func (m *PostUserResponse) String() string            { return proto.CompactTextString(m) }
func (*PostUserResponse) ProtoMessage()               {}
func (*PostUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *PostUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateUserRequest struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *UpdateUserResponse) Reset()                    { *m = UpdateUserResponse{} }
func (m *UpdateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserResponse) ProtoMessage()               {}
func (*UpdateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type DeleteUserRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteUserResponse struct {
}

func (m *DeleteUserResponse) Reset()                    { *m = DeleteUserResponse{} }
func (m *DeleteUserResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserResponse) ProtoMessage()               {}
func (*DeleteUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterType((*GetUserRequest)(nil), "pb.GetUserRequest")
	proto.RegisterType((*GetUserResponse)(nil), "pb.GetUserResponse")
	proto.RegisterType((*PostUserRequest)(nil), "pb.PostUserRequest")
	proto.RegisterType((*PostUserResponse)(nil), "pb.PostUserResponse")
	proto.RegisterType((*UpdateUserRequest)(nil), "pb.UpdateUserRequest")
	proto.RegisterType((*UpdateUserResponse)(nil), "pb.UpdateUserResponse")
	proto.RegisterType((*DeleteUserRequest)(nil), "pb.DeleteUserRequest")
	proto.RegisterType((*DeleteUserResponse)(nil), "pb.DeleteUserResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error)
	PostUser(ctx context.Context, in *PostUserRequest, opts ...grpc.CallOption) (*PostUserResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*GetUserResponse, error) {
	out := new(GetUserResponse)
	err := grpc.Invoke(ctx, "/pb.UserService/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) PostUser(ctx context.Context, in *PostUserRequest, opts ...grpc.CallOption) (*PostUserResponse, error) {
	out := new(PostUserResponse)
	err := grpc.Invoke(ctx, "/pb.UserService/PostUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := grpc.Invoke(ctx, "/pb.UserService/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserResponse, error) {
	out := new(DeleteUserResponse)
	err := grpc.Invoke(ctx, "/pb.UserService/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	GetUser(context.Context, *GetUserRequest) (*GetUserResponse, error)
	PostUser(context.Context, *PostUserRequest) (*PostUserResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*DeleteUserResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_PostUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).PostUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/PostUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).PostUser(ctx, req.(*PostUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.UserService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "PostUser",
			Handler:    _UserService_PostUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserService_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/user/pb/user.proto",
}

func init() { proto.RegisterFile("api/user/pb/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x86, 0x95, 0xb0, 0x85, 0xed, 0x2c, 0x2a, 0xec, 0x34, 0x54, 0xc1, 0xaa, 0xc4, 0x2a, 0x5c,
	0x2a, 0x0e, 0x09, 0x0d, 0x27, 0xb8, 0x55, 0x42, 0xe2, 0x84, 0x04, 0x0b, 0x85, 0x23, 0x72, 0x9a,
	0xa1, 0xb2, 0xb4, 0x89, 0x4d, 0xec, 0xf4, 0x82, 0xb8, 0xf0, 0x0a, 0xbc, 0x0f, 0x2f, 0xc1, 0x0b,
	0x70, 0xe0, 0x41, 0x90, 0xed, 0xa4, 0xbb, 0xc9, 0x22, 0xba, 0x27, 0xcb, 0xe3, 0xff, 0xff, 0xc7,
	0xf3, 0x69, 0xe0, 0x88, 0x2b, 0x91, 0xb5, 0x9a, 0x9a, 0x4c, 0x15, 0xee, 0x4c, 0x55, 0x23, 0x8d,
	0xc4, 0x50, 0x15, 0xec, 0xf8, 0x52, 0xca, 0xcb, 0x15, 0x65, 0x56, 0xc2, 0xeb, 0x5a, 0x1a, 0x6e,
	0x84, 0xac, 0xb5, 0x57, 0xb0, 0x47, 0xdd, 0xab, 0xbb, 0x15, 0xed, 0xe7, 0xcc, 0x88, 0x8a, 0xb4,
	0xe1, 0x95, 0xf2, 0x82, 0xe4, 0x67, 0x00, 0x93, 0x73, 0x4d, 0x0d, 0x1e, 0x40, 0x28, 0xca, 0x38,
	0x58, 0x04, 0x27, 0xfb, 0xcb, 0x50, 0x94, 0xc8, 0x60, 0x6a, 0x3b, 0xd5, 0xbc, 0xa2, 0x38, 0x74,
	0xd5, 0xeb, 0x3b, 0x46, 0xb0, 0x47, 0x15, 0x17, 0xab, 0xf8, 0x96, 0x7b, 0xf0, 0x17, 0x7c, 0x0e,
	0x70, 0xd1, 0x10, 0x37, 0x54, 0x7e, 0xe2, 0x26, 0x9e, 0x2c, 0x82, 0x93, 0x59, 0xce, 0x52, 0xff,
	0x81, 0xb4, 0xff, 0x40, 0xfa, 0xbe, 0xff, 0xc0, 0x72, 0xbf, 0x53, 0x9f, 0x19, 0x6b, 0x6d, 0x55,
	0xd9, 0x5b, 0xf7, 0x6e, 0xb6, 0x76, 0xea, 0x33, 0x93, 0x2c, 0xe0, 0xe0, 0x15, 0x19, 0x3b, 0xc2,
	0x92, 0xbe, 0xb4, 0xa4, 0xcd, 0x78, 0x92, 0x24, 0x83, 0x7b, 0xd7, 0x0a, 0xad, 0x64, 0xad, 0x09,
	0x8f, 0x61, 0x62, 0x87, 0x71, 0xa2, 0x59, 0x3e, 0x4d, 0x55, 0x91, 0xba, 0x77, 0x57, 0xb5, 0x86,
	0x37, 0x52, 0x0f, 0x32, 0xff, 0x6f, 0x78, 0x0a, 0xf7, 0xd7, 0x86, 0x9d, 0x5a, 0x9c, 0xc2, 0xfc,
	0xdc, 0x8d, 0xb0, 0x7b, 0x93, 0x1c, 0x70, 0xd3, 0xb2, 0x53, 0x9b, 0xc7, 0x30, 0x7f, 0x49, 0x2b,
	0x1a, 0xb6, 0x19, 0xf3, 0x89, 0x00, 0x37, 0x45, 0x3e, 0x38, 0xff, 0x1d, 0xc2, 0xcc, 0x16, 0xde,
	0x51, 0x73, 0x25, 0x2e, 0x08, 0x5f, 0xc3, 0x9d, 0x8e, 0x22, 0xa2, 0xed, 0x32, 0x84, 0xce, 0x0e,
	0x07, 0x35, 0x9f, 0x91, 0x3c, 0xfc, 0xfe, 0xeb, 0xcf, 0x8f, 0xf0, 0x10, 0xe7, 0x6e, 0x3b, 0xaf,
	0x4e, 0xfd, 0x0e, 0x7f, 0x15, 0xe5, 0x37, 0x7c, 0x0b, 0xd3, 0x1e, 0x19, 0x3a, 0xef, 0x88, 0x38,
	0x8b, 0x86, 0xc5, 0x2e, 0x91, 0xb9, 0xc4, 0x28, 0xb9, 0xbb, 0x99, 0xf8, 0xc2, 0x0d, 0x8b, 0x1f,
	0x01, 0xd6, 0x80, 0xf0, 0x81, 0x43, 0x31, 0x66, 0xcc, 0x8e, 0xc6, 0xe5, 0x61, 0x30, 0xfb, 0x57,
	0xf0, 0x07, 0x80, 0x35, 0x20, 0x1f, 0xbc, 0x45, 0xd5, 0x07, 0x6f, 0x73, 0xec, 0x19, 0x3c, 0xd9,
	0x66, 0x50, 0xdc, 0x76, 0x9b, 0xfd, 0xec, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x8e, 0x11,
	0x17, 0xdf, 0x03, 0x00, 0x00,
}
